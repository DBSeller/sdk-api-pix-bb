<?php
/**
 * InlineResponse201
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PIX-BB
 *
 * API para gerenciar os serviços referentes ao PIX (Sistema de Pagamentos Instantâneos) no BB.
 *
 * OpenAPI spec version: 1.8
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.29
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * InlineResponse201 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse201 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_201';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'timestamp_criacao_solicitacao' => 'string',
'estado_solicitacao' => 'string',
'codigo_conciliacao_solicitante' => 'string',
'numero_versao_solicitacao_pagamento' => 'int',
'link_qr_code' => 'string',
'qr_code' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'timestamp_criacao_solicitacao' => null,
'estado_solicitacao' => null,
'codigo_conciliacao_solicitante' => null,
'numero_versao_solicitacao_pagamento' => null,
'link_qr_code' => null,
'qr_code' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'timestamp_criacao_solicitacao' => 'timestampCriacaoSolicitacao',
'estado_solicitacao' => 'estadoSolicitacao',
'codigo_conciliacao_solicitante' => 'codigoConciliacaoSolicitante',
'numero_versao_solicitacao_pagamento' => 'numeroVersaoSolicitacaoPagamento',
'link_qr_code' => 'linkQrCode',
'qr_code' => 'qrCode'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'timestamp_criacao_solicitacao' => 'setTimestampCriacaoSolicitacao',
'estado_solicitacao' => 'setEstadoSolicitacao',
'codigo_conciliacao_solicitante' => 'setCodigoConciliacaoSolicitante',
'numero_versao_solicitacao_pagamento' => 'setNumeroVersaoSolicitacaoPagamento',
'link_qr_code' => 'setLinkQrCode',
'qr_code' => 'setQrCode'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'timestamp_criacao_solicitacao' => 'getTimestampCriacaoSolicitacao',
'estado_solicitacao' => 'getEstadoSolicitacao',
'codigo_conciliacao_solicitante' => 'getCodigoConciliacaoSolicitante',
'numero_versao_solicitacao_pagamento' => 'getNumeroVersaoSolicitacaoPagamento',
'link_qr_code' => 'getLinkQrCode',
'qr_code' => 'getQrCode'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['timestamp_criacao_solicitacao'] = isset($data['timestamp_criacao_solicitacao']) ? $data['timestamp_criacao_solicitacao'] : null;
        $this->container['estado_solicitacao'] = isset($data['estado_solicitacao']) ? $data['estado_solicitacao'] : null;
        $this->container['codigo_conciliacao_solicitante'] = isset($data['codigo_conciliacao_solicitante']) ? $data['codigo_conciliacao_solicitante'] : null;
        $this->container['numero_versao_solicitacao_pagamento'] = isset($data['numero_versao_solicitacao_pagamento']) ? $data['numero_versao_solicitacao_pagamento'] : null;
        $this->container['link_qr_code'] = isset($data['link_qr_code']) ? $data['link_qr_code'] : null;
        $this->container['qr_code'] = isset($data['qr_code']) ? $data['qr_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['timestamp_criacao_solicitacao'] === null) {
            $invalidProperties[] = "'timestamp_criacao_solicitacao' can't be null";
        }
        if ($this->container['estado_solicitacao'] === null) {
            $invalidProperties[] = "'estado_solicitacao' can't be null";
        }
        if ($this->container['codigo_conciliacao_solicitante'] === null) {
            $invalidProperties[] = "'codigo_conciliacao_solicitante' can't be null";
        }
        if ($this->container['numero_versao_solicitacao_pagamento'] === null) {
            $invalidProperties[] = "'numero_versao_solicitacao_pagamento' can't be null";
        }
        if ($this->container['link_qr_code'] === null) {
            $invalidProperties[] = "'link_qr_code' can't be null";
        }
        if ($this->container['qr_code'] === null) {
            $invalidProperties[] = "'qr_code' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets timestamp_criacao_solicitacao
     *
     * @return string
     */
    public function getTimestampCriacaoSolicitacao()
    {
        return $this->container['timestamp_criacao_solicitacao'];
    }

    /**
     * Sets timestamp_criacao_solicitacao
     *
     * @param string $timestamp_criacao_solicitacao Timestamp que indica o momento em que foi criada a cobrança. Respeita o formato definido na RFC 3339
     *
     * @return $this
     */
    public function setTimestampCriacaoSolicitacao($timestamp_criacao_solicitacao)
    {
        $this->container['timestamp_criacao_solicitacao'] = $timestamp_criacao_solicitacao;

        return $this;
    }

    /**
     * Gets estado_solicitacao
     *
     * @return string
     */
    public function getEstadoSolicitacao()
    {
        return $this->container['estado_solicitacao'];
    }

    /**
     * Sets estado_solicitacao
     *
     * @param string $estado_solicitacao Texto descritivo do Estado Solicitacao
     *
     * @return $this
     */
    public function setEstadoSolicitacao($estado_solicitacao)
    {
        $this->container['estado_solicitacao'] = $estado_solicitacao;

        return $this;
    }

    /**
     * Gets codigo_conciliacao_solicitante
     *
     * @return string
     */
    public function getCodigoConciliacaoSolicitante()
    {
        return $this->container['codigo_conciliacao_solicitante'];
    }

    /**
     * Sets codigo_conciliacao_solicitante
     *
     * @param string $codigo_conciliacao_solicitante O campo \"\"Codigo Conciliacao Solicitacao\"\" determina o identificador da transação. O objetivo desse campo é ser um elemento que possibilite ao PSP do recebedor apresentar ao usuário recebedor a funcionalidade de conciliação de pagamentos.  Na pacs.008, é referenciado como TransactionIdentification <txId> ou idConciliacaoRecebedor. O preenchimento do campo txid é limitado a 35 caracteres na pacs.008.  Em termos de fluxo de funcionamento, o txid é lido pelo aplicativo do PSP do pagador e, depois de confirmado o pagamento, é enviado para o SPI via pacs.008. Uma pacs.008 também é enviada ao PSP do recebedor, contendo, além de todas as informações usuais do pagamento, o txid. Ao perceber um recebimento dotado de txid, o PSP do recebedor está apto a se comunicar com o usuário recebedor, informando que um pagamento específico foi liquidado
     *
     * @return $this
     */
    public function setCodigoConciliacaoSolicitante($codigo_conciliacao_solicitante)
    {
        $this->container['codigo_conciliacao_solicitante'] = $codigo_conciliacao_solicitante;

        return $this;
    }

    /**
     * Gets numero_versao_solicitacao_pagamento
     *
     * @return int
     */
    public function getNumeroVersaoSolicitacaoPagamento()
    {
        return $this->container['numero_versao_solicitacao_pagamento'];
    }

    /**
     * Sets numero_versao_solicitacao_pagamento
     *
     * @param int $numero_versao_solicitacao_pagamento O tipo do campo \"\"Numero Versao Solicitacao Pagamento\"\" é um número. Sempre começa em zero. Sempre varia em acréscimos de 1.  O campo \"\"Numero Versao Solicitacao Pagamento\"\" adiciona rastreabilidade ao payload. Uma vez que se recomenda que o payload assinado seja armazenado pelo PSP do pagador em seus registros, fica facilitada a comunicação entre PSPs acerca de qual payload especificamente está se tratando, no contexto de resolução de possíveis problemas
     *
     * @return $this
     */
    public function setNumeroVersaoSolicitacaoPagamento($numero_versao_solicitacao_pagamento)
    {
        $this->container['numero_versao_solicitacao_pagamento'] = $numero_versao_solicitacao_pagamento;

        return $this;
    }

    /**
     * Gets link_qr_code
     *
     * @return string
     */
    public function getLinkQrCode()
    {
        return $this->container['link_qr_code'];
    }

    /**
     * Sets link_qr_code
     *
     * @param string $link_qr_code O campo Link URL representa uma URL que será utilizada para recuperação dos dados que fazem parte do pagamento.   O formato dessa URL, bem como os demais detalhes sobre segurança relacionados ao QR Code,está detalhadono Manual de Segurança do SFN
     *
     * @return $this
     */
    public function setLinkQrCode($link_qr_code)
    {
        $this->container['link_qr_code'] = $link_qr_code;

        return $this;
    }

    /**
     * Gets qr_code
     *
     * @return string
     */
    public function getQrCode()
    {
        return $this->container['qr_code'];
    }

    /**
     * Sets qr_code
     *
     * @param string $qr_code Texto para geração da imagem do QrCode Dinâmico
     *
     * @return $this
     */
    public function setQrCode($qr_code)
    {
        $this->container['qr_code'] = $qr_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
